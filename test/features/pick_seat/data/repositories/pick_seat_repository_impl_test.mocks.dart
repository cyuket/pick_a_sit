// Mocks generated by Mockito 5.1.0 from annotations
// in pick_a_sit/test/features/pick_seat/data/repositories/pick_seat_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:pick_a_sit/core/network/network_info.dart' as _i7;
import 'package:pick_a_sit/features/pick_seat/data/datasources/pick_seat_remote_data_source.dart'
    as _i2;
import 'package:pick_a_sit/features/pick_seat/data/models/bus_line_model.dart'
    as _i4;
import 'package:pick_a_sit/features/pick_seat/data/models/seat_model.dart'
    as _i5;
import 'package:pick_a_sit/features/pick_seat/data/models/user_model.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [PickSeatRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPickSeatRemoteDataSource extends _i1.Mock
    implements _i2.PickSeatRemoteDataSource {
  MockPickSeatRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.BusLineModel>> getBusLines() =>
      (super.noSuchMethod(Invocation.method(#getBusLines, []),
              returnValue:
                  Future<List<_i4.BusLineModel>>.value(<_i4.BusLineModel>[]))
          as _i3.Future<List<_i4.BusLineModel>>);
  @override
  _i3.Future<List<_i5.SeatModel>> getSeats(String? busLine) =>
      (super.noSuchMethod(Invocation.method(#getSeats, [busLine]),
              returnValue: Future<List<_i5.SeatModel>>.value(<_i5.SeatModel>[]))
          as _i3.Future<List<_i5.SeatModel>>);
  @override
  _i3.Future<bool> book(
          String? busLine, int? seatNumber, _i6.UserModel? userEntity) =>
      (super.noSuchMethod(
          Invocation.method(#book, [busLine, seatNumber, userEntity]),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i7.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
}
